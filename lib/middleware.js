// Generated by CoffeeScript 1.6.2
var contains, isEmpty, validate, validateBody, validateQuery, _ref;

_ref = require('underscore'), contains = _ref.contains, isEmpty = _ref.isEmpty;

validate = require('./index').validate;

validateBody = function(schema) {
  return function(req, res, next) {
    var data, errors, _ref1;

    _ref1 = validate(schema, req.body), errors = _ref1.errors, data = _ref1.data;
    if (!isEmpty(errors)) {
      return res.send(400, errors);
    } else {
      req.validBody = data;
      return next();
    }
  };
};

validateQuery = function(schema) {
  return function(req, res, next) {
    var data, errors, _ref1;

    _ref1 = validate(schema, req.query, {
      weak: true
    }), errors = _ref1.errors, data = _ref1.data;
    if (!isEmpty(errors)) {
      return res.send(400, errors);
    } else {
      req.validQuery = data;
      return next();
    }
  };
};

validate = function(schema) {
  return function(req, res, next) {
    if (contains(['GET', 'HEAD', 'OPTIONS'], req.method)) {
      return validateQuery(schema)(req, res, next);
    } else {
      return validateBody(schema)(req, res, next);
    }
  };
};

module.exports = {
  validateBody: validateBody,
  validateQuery: validateQuery,
  validate: validate
};
